{"ast":null,"code":"import _asyncToGenerator from \"/Users/hailiejimenez/iCloud Drive (Archive)/Desktop/la odiada espol/DAWN/repos/hibridaApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nexport class TeachablemachineService {\n  constructor() {\n    this.URL = \"https://teachablemachine.withgoogle.com/models/ET5DFMIsq/\";\n    this.classLabels = [];\n  }\n  loadModel() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Check if tmImage is available\n        if (typeof window.tmImage === 'undefined') {\n          throw new Error('Teachable Machine library is not loaded.');\n        }\n        const modelURL = _this.URL + 'model.json';\n        const metadataURL = _this.URL + 'metadata.json';\n        const tmImage = window.tmImage;\n        _this.model = yield tmImage.load(modelURL, metadataURL);\n        _this.classLabels = _this.model.getClassLabels();\n        console.log('Model loaded successfully');\n      } catch (error) {\n        console.error('Error al cargar el modelo:', error);\n        throw new Error('No se pudo cargar el modelo.');\n      }\n    })();\n  }\n  getClassLabels() {\n    return this.classLabels;\n  }\n  static {\n    this.ɵfac = function TeachablemachineService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TeachablemachineService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TeachablemachineService,\n      factory: TeachablemachineService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["TeachablemachineService","constructor","URL","classLabels","loadModel","_this","_asyncToGenerator","window","tmImage","Error","modelURL","metadataURL","model","load","getClassLabels","console","log","error","factory","ɵfac","providedIn"],"sources":["/Users/hailiejimenez/iCloud Drive (Archive)/Desktop/la odiada espol/DAWN/repos/hibridaApp/src/app/services/teachablemachine.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeachablemachineService {\n  private URL = \"https://teachablemachine.withgoogle.com/models/ET5DFMIsq/\"\n  private model: any;\n  private classLabels: string[] = [];\n\n  constructor() { }\n\n  async loadModel() {\n    try {\n      // Check if tmImage is available\n      \n      if (typeof (window as any).tmImage === 'undefined') {\n        \n        throw new Error('Teachable Machine library is not loaded.');\n      }\n\n      const modelURL = this.URL + 'model.json';\n      const metadataURL = this.URL + 'metadata.json';\n\n      const tmImage = (window as any).tmImage;\n      this.model = await tmImage.load(modelURL, metadataURL);\n      this.classLabels = this.model.getClassLabels();\n      console.log('Model loaded successfully');\n    } catch (error) {\n      console.error('Error al cargar el modelo:', error);\n      throw new Error('No se pudo cargar el modelo.');\n    }\n  }\n\n  getClassLabels(): string[] {\n    return this.classLabels;\n  }\n}\n"],"mappings":";;AAKA,OAAM,MAAOA,uBAAuB;EAKlCC,YAAA;IAJQ,KAAAC,GAAG,GAAG,2DAA2D;IAEjE,KAAAC,WAAW,GAAa,EAAE;EAElB;EAEVC,SAASA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACb,IAAI;QACF;QAEA,IAAI,OAAQC,MAAc,CAACC,OAAO,KAAK,WAAW,EAAE;UAElD,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;QAC7D;QAEA,MAAMC,QAAQ,GAAGL,KAAI,CAACH,GAAG,GAAG,YAAY;QACxC,MAAMS,WAAW,GAAGN,KAAI,CAACH,GAAG,GAAG,eAAe;QAE9C,MAAMM,OAAO,GAAID,MAAc,CAACC,OAAO;QACvCH,KAAI,CAACO,KAAK,SAASJ,OAAO,CAACK,IAAI,CAACH,QAAQ,EAAEC,WAAW,CAAC;QACtDN,KAAI,CAACF,WAAW,GAAGE,KAAI,CAACO,KAAK,CAACE,cAAc,EAAE;QAC9CC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD,MAAM,IAAIR,KAAK,CAAC,8BAA8B,CAAC;MACjD;IAAC;EACH;EAEAK,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACX,WAAW;EACzB;;;uCA/BWH,uBAAuB;IAAA;EAAA;;;aAAvBA,uBAAuB;MAAAkB,OAAA,EAAvBlB,uBAAuB,CAAAmB,IAAA;MAAAC,UAAA,EAFtB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}